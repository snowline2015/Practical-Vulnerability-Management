import datetime
from xml.etree import ElementTree as ET


xml_string = open('report.xml').read()
root = ET.fromstring(xml_string)

res = {}
oidList = {}
for reports in root.findall('report'):
    for report in reports.findall('report'):
        for results in report.findall('results'):
            for result in results.findall('result'):

                # Ignore nested results
                if result.find("host") is None:
                    continue

                if result.find('name').text not in res:
                    res[result.find('name').text] = []

                ipaddress = result.find("host").text
                description = result.find('description').text
                port, proto = result.find("port").text.split('/')

                # Parse the NVT (Network Vulnerability Tests) data
                nvtblock = result.find("nvt")

                oid = nvtblock.get("oid")
                nvt_name = nvtblock.find("name").text
                nvt_family = nvtblock.find("family").text

                # Ignore vulns whose cvss is 0
                cvss = float(nvtblock.find("cvss_base").text)
                if cvss == 0:
                    continue
                nvt_bid = nvtblock.find("bid").text.split(", ") if nvtblock.find("bid") is not None else []
                nvt_xref = nvtblock.find("xref").text.split(", ") if nvtblock.find("xref") is not None else []

                cve = []
                try:
                    refs = nvtblock.find("refs").findall("ref")
                    for ref in refs:
                        if ref.get('type') == "cve":
                            cve.append(ref.get('id'))
                except:
                    pass

                tags_data = {}
                tags = nvtblock.find("tags").text.split("|")
                for item in tags:
                    tag_name, tag_value = item.split("=", 1)
                    tags_data[tag_name] = tag_value
                threat = result.find("threat").text
                updated = datetime.datetime.utcnow()

                if ipaddress not in oidList.keys():
                    oidList[ipaddress] = []
                oidList[ipaddress].append({'proto': proto, 'port': port, 'oid': oid})

                res[result.find('name').text].append({
                    'ipaddress': ipaddress,
                    'port': port,
                    'proto': proto,
                    'description': description,
                    'oid': oid,
                    'nvt_name': nvt_name,
                    'nvt_family': nvt_family,
                    'cvss': cvss,
                    'nvt_bid': nvt_bid,
                    'nvt_xref': nvt_xref,
                    'cve': cve,
                    'tags_data': tags_data,
                    'threat': threat,
                    'updated': updated
                })

ok = 0




