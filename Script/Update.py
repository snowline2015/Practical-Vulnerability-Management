import requests
import subprocess
import json
import datetime
import os


def get_update_time():
    if os.path.exists('Database/update_time.json'):
        with open('Database/update_time.json', 'r') as f:
            return json.load(f)['last update']
    else:
        return None


def write_update_time():
    with open('Database/update_time.json', 'w') as f:
        json.dump({'last update': round(int(datetime.datetime.now().timestamp()))}, f)


def Update():
    if get_update_time() is None or round(int(datetime.datetime.now().timestamp())) - get_update_time() > 604800:
        # Update the ExploitDB
        res = requests.get(
            'https://raw.githubusercontent.com/andreafioraldi/cve_searchsploit/master/cve_searchsploit/exploitdb_mapping_cve.json')
        with open('Database/exploitdb_mapping_cve.json', 'w') as f:
            f.write(res.text)

        # Update the GVM database
        subprocess.call('sudo greenbone-feed-sync --type GVMD_DATA', shell=True)
        subprocess.call('sudo greenbone-feed-sync --type SCAP', shell=True)
        subprocess.call('sudo greenbone-feed-sync --type CERT', shell=True)

        # Update the Metasploit
        subprocess.call('sudo apt update && sudo apt install metasploit-framework -y', shell=True)

    write_update_time()





